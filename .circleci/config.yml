default-config: &default-config
  docker:
    - image: circleci/node:10.16.0
  working_directory: ~/repo

deploy-steps: &deploy-steps
  steps:
    - attach_workspace:
        at: .
    - run:
        name: Install deploy dependencies
        command: |
          npm install

#    - run:
#        name: Upload the bundle
#        command: |
#          cd deploy
#          node deploy.js

jobs:
  build:
    <<: *default-config
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - deps-{{ checksum "package.json" }}-
            - deps-
      - run:
          name: Install dependencies
          command: |
            npm install --no-save
      - save_cache:
          key: deps-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      #- run:
      #    name: Run the Linter
      #    command: |
      #      npm run lint

  cypress-test-dev:
    docker:
    - image: cypress/base:10
    steps:
    - checkout
    - restore_cache:
        keys:
          - deps-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          - deps-{{ checksum "package.json" }}-
          - deps-
    - run:
        name: Install dependencies
        command: |
          npm install --no-save
    - run:
        name: Start Node Server
        command: npm start
        background: true
    - run:
        name: Run Cypress
        command: |
          $(yarn bin)/cypress run
  deploy-dev:
    <<: *default-config
    <<: *deploy-steps

  deploy-sandbox:
    <<: *default-config
    <<: *deploy-steps

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy-dev:
          requires:
            - build
          filters:
            branches:
              ignore:
                - main
      - deploy-sandbox:
          requires:
            - build
          filters:
            branches:
              only:
               - main
      - cypress-test-dev:
          requires:
            - deploy-dev
